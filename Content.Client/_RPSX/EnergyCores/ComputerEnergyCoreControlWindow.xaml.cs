using System.Linq;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.CustomControls;
using Robust.Client.UserInterface.XAML;
using Content.Shared.RPSX.EnergyCores;


namespace Content.Client.RPSX.EnergyCores;

[GenerateTypedNameReferences]
public sealed partial class ComputerEnergyCoreControlWindow : DefaultWindow
{
    public event Action<bool>? OnPowerToggleButton;
    public event Action<float>? OnPowerSupplyChanged;
    public ComputerEnergyCoreControlWindow()
    {
        RobustXamlLoader.Load(this);
        IoCManager.InjectDependencies(this);
        PowerToggleButton.OnToggled += _ => OnPowerToggleButton?.Invoke(PowerToggleButton.Pressed);
    }
    public void SetButtonsDisabled(EnergyCoreConsoleComponent component)
    {
        if (component.EnergyCoreEntity == null)
        {
            PowerToggleButton.Disabled = true;
        }
        else
        {
            PowerToggleButton.Disabled = false;
        }
    }
    public void SetTimeOfLife(float TimeOfLife)
    {
        TimeAliveRich.Text = TimeOfLife.ToString();
    }
    public void SetDamage(float damage)
    {
        CurrentHP.Text = damage.ToString();
    }
    public void SetPower(bool isOn)
    {
        PowerToggleButton.Pressed = isOn;
    }
}
